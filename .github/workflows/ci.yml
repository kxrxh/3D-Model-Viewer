name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: viewer-app/node_modules
        key: ${{ runner.os }}-bun-${{ hashFiles('viewer-app/bun.lockb') }}
        restore-keys: ${{ runner.os }}-bun-

    - name: Install dependencies
      working-directory: viewer-app
      run: bun install

    - name: Format code with Biome
      working-directory: viewer-app
      run: bun run format

    - name: Commit formatting changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add -A
        git diff --quiet && git diff --staged --quiet || (git commit -m "style: format code with Biome" && git push)

    - name: Lint with Biome
      working-directory: viewer-app
      run: bun run lint

    - name: Type check
      working-directory: viewer-app
      run: bun run tsc --noEmit

    - name: Run tests
      working-directory: viewer-app
      run: bun test || echo "No tests found or tests failed"

    - name: Build
      working-directory: viewer-app
      run: bun run build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    timeout-minutes: 10

    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: ${{ runner.os }}-buildx-

    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          if [ ! -d "3D-Model-Viewer" ]; then
            echo "Directory 3D-Model-Viewer does not exist. Cloning repository..."
            git clone https://github.com/${{ github.repository }}.git
            cd 3D-Model-Viewer || exit 1
          else
            echo "Directory 3D-Model-Viewer exists. Pulling changes..."
            cd 3D-Model-Viewer || exit 1
            git pull
          fi
          docker-compose down
          docker-compose up --build -d

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      working-directory: viewer-app
      run: bun install

    - name: Format code with Biome
      working-directory: viewer-app
      run: bun run format

    - name: Commit formatting changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add -A
        git diff --quiet && git diff --staged --quiet || (git commit -m "style: format code with Biome" && git push)

    - name: Lint with Biome
      working-directory: viewer-app
      run: bun run lint

    - name: Type check
      working-directory: viewer-app
      run: bun run tsc --noEmit

    - name: Build
      working-directory: viewer-app
      run: bun run build

  lint_check:
    needs: setup
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    - name: Install dependencies
      working-directory: viewer-app
      run: bun install --frozen-lockfile

    - name: Format code check with Biome
      working-directory: viewer-app
      run: bun run format:check

    - name: Lint with Biome
      working-directory: viewer-app
      run: bun run lint

    - name: Type check
      working-directory: viewer-app
      run: bun run tsc --noEmit

  build_check:
    needs: setup
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    - name: Install dependencies
      working-directory: viewer-app
      run: bun install --frozen-lockfile

    - name: Build
      working-directory: viewer-app
      run: bun run build

  deploy:
    needs: build_check
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          cd 3D-Model-Viewer || exit 1
          git pull origin main
          docker-compose down
          docker-compose up --build -d
